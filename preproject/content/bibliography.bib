@article{cnn-survey,
  author   = {Li, Zewen and Liu, Fan and Yang, Wenjie and Peng, Shouheng and Zhou, Jun},
  journal  = {IEEE Transactions on Neural Networks and Learning Systems},
  title    = {A Survey of Convolutional Neural Networks: Analysis, Applications, and Prospects},
  year     = {2022},
  volume   = {33},
  number   = {12},
  pages    = {6999-7019},
  keywords = {Convolutional neural networks;Feature extraction;Neurons;Deep learning;Computer vision;Computer vision;convolutional neural networks (CNNs);deep learning;deep neural networks},
  doi      = {10.1109/TNNLS.2021.3084827}
}

@inproceedings{Rahul2017,
  author    = {Rahul, R. K.
               and Anjali, T.
               and Menon, Vijay Krishna
               and Soman, K. P.},
  editor    = {Thampi, Sabu M.
               and Mart{\'i}nez P{\'e}rez, Gregorio
               and Westphall, Carlos Becker
               and Hu, Jiankun
               and Fan, Chun I.
               and G{\'o}mez M{\'a}rmol, F{\'e}lix},
  title     = {Deep Learning for Network Flow Analysis and Malware Classification},
  booktitle = {Security in Computing and Communications},
  year      = {2017},
  publisher = {Springer Singapore},
  address   = {Singapore},
  pages     = {226--235},
  abstract  = {In this paper, we present the results obtained by applying deep learning techniques to classification of network protocols and applications using flow features and data signatures. We also present a similar classification of malware using their binary files. We use our own dataset for traffic identification and Microsoft Kaggle dataset for malware classification tasks. The current techniques used in network traffic analysis and malware detection is time consuming and beatable as the precise signatures are known. Deep learned features in both cases are not hand crafted and are learned form data signatures. It cannot be understood by the attacker or the malware in order to fake or hide it and hence cannot be bypassed easily.},
  isbn      = {978-981-10-6898-0}
}

@inproceedings{Li2021,
  author    = {Li, Xinghua and Li, Xiaolong and Wang, Feng and Li, Wenna and Li, Ang},
  title     = {A Malware Detection Method Based on Machine Learning and Ensemble of Regression Trees},
  year      = {2021},
  isbn      = {9781450390200},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/3469213.3470713},
  doi       = {10.1145/3469213.3470713},
  abstract  = {In the context of the current large number of malicious codes, the detection and protection of malicious codes is particularly important. In recent years, a method of using deep learning to detect malicious code has emerged. Thus, in this paper, we propose a new detection method that converts binary files of malicious code into decimal arrays and use 1-D CNN to perform classification and recognition. Aiming at the imbalance in the number of code families, we choose xgboost, which performs well in the classification prediction competition. We conduct experiments on 9,458 malware samples from 25 different malware families in the Vision Research Lab. The experimental results show that our classification prediction reaches 97\% accuracy.},
  booktitle = {2021 2nd International Conference on Artificial Intelligence and Information Systems},
  articleno = {280},
  numpages  = {6},
  keywords  = {Cnn, deep learning, malware, xgboost},
  location  = {Chongqing, China},
  series    = {ICAIIS 2021}
}

@article{Chaganti2022,
  title    = {Deep learning based cross architecture internet of things malware detection and classification},
  journal  = {Computers & Security},
  volume   = {120},
  pages    = {102779},
  year     = {2022},
  issn     = {0167-4048},
  doi      = {10.1016/j.cose.2022.102779},
  url      = {https://www.sciencedirect.com/science/article/pii/S0167404822001742},
  author   = {Rajasekhar Chaganti and Vinayakumar Ravi and Tuan D. Pham},
  keywords = {IoT Malware, Deep learning, Recurrent neural network, Gated recurrent unit, Convolution neural network, Byte sequences, Internet of things, Malware classification},
  abstract = {The number of publicly exposed Internet of Things (IoT) devices has been increasing, as more number of these devices connected to the internet with default settings. The devices accessed with default credentials are getting compromised with brute force attempts or the vulnerable devices are compromised with exploits to install the malware and perform malicious activity like initiating denial of service (DoS) attacks. The malware detection and classification in IoT paradigm is still considered a problem, as the adversary consistently create new variants of IoT malware and actively look for compromising the victim devices. In this paper, we proposed a Deep Learning (DL) based Bidirectional-Gated Recurrent Unit-Convolutional Neural Network (Bi-GRU-CNN) model to detect the IoT malware and classify the IoT malware families using Executable and Linkable Format (ELF, formerly named Extensible Linking Format) binary file byte sequences as an input feature. In addition, Recurrent Neural Network (RNN) based DL model combinations are considered to evaluate the performances of the IoT malware detection and family classification and also those models performance is compared with the proposed method. Our performance evaluation shows that our proposed approach obtained 100% accuracy for IoT malware detection case and 98% for IoT malware family classification. Further evaluation of our proposed model with only byte sequence as an input feature exhibit similar performance as the byte sequence and CPU types as an input features and showed that our model is robust and platform independent to detect and classify the IoT malware.}
}

@inproceedings{Yang2019,
  author    = {Yang, Shouguo and Shi, Zhiqiang and Zhang, Guodong and Li, Mingxuan and Ma, Yuan and Sun, Limin},
  booktitle = {ICC 2019 - 2019 IEEE International Conference on Communications (ICC)},
  title     = {Understand Code Style: Efficient CNN-Based Compiler Optimization Recognition System},
  year      = {2019},
  volume    = {},
  number    = {},
  pages     = {1-6},
  abstract  = {Compiler optimization level recognition can be applied to vulnerability discovery and binary analysis. Due to the exists of many different compilation optimization options, the difference in the contents of the binary file is very complicated. There are thousands of compiler optimization algorithms and multiple different processor architectures, so it is very difficult to manually analyze binary files and recognize its compiler optimization level with rules. This paper first proposes a CNN-based compiler optimization level recognition model: BinEye. The system extracts semantic and structural differences and automatically recognize the compiler optimization levels. The model is designed to be very suitable for binary file processing and is easy to understand. We built a dataset containing 80028 binary files for the model training and testing. Our proposed model achieves an accuracy of over 97%. At the same time, BinEye is a fully CNN-based system and it has a faster forward calculation speed, at least 8 times faster than the normal RNN-based model. Through our analysis of the model output, we successfully found the difference in assembly codes caused by the different compiler optimization level. This means that the model we proposed is interpretable. Based on our model, we propose a method to analyze the code differences caused by different compiler optimization levels, which has great guiding significance for analyzing closed source compilers and binary security analysis.},
  keywords  = {Optimization;Security;Convolution;Analytical models;Task analysis;Software;Semantics},
  doi       = {10.1109/ICC.2019.8761073},
  issn      = {1938-1883},
  month     = {May}
}


@article{Pizzolotto2021,
  author   = {Pizzolotto, Davide and Inoue, Katsuro},
  journal  = {IEEE Access},
  title    = {Identifying Compiler and Optimization Level in Binary Code From Multiple Architectures},
  year     = {2021},
  volume   = {9},
  number   = {},
  pages    = {163461-163475},
  abstract = {While compiling a native application, different compiler flags or optimization levels can be configured. This choice depends on the different requirements. For example, if the application binary is intended for final release, the flags and optimization settings should be set for execution speed and efficiency. Alternatively, if the application is to be used for debugging purposes, debug flags should be configured accordingly, usually involving minor or no code optimization. However, this information cannot be easily extracted from a compiled binary. Nonetheless, ensuring the same compiler and compilation flags is particularly important when comparing different binary files, to avoid inaccurate or unreliable analyses. Unfortunately, to understand which flags and optimizations have been used, a deep knowledge of the target architecture and the compiler used is required. In this study, we present two deep learning models used to detect both compiler and optimization level in a compiled binary. The optimization levels we study are O0, O1, O2, O3, and Os in the x86_64, AArch64, RISC-V, SPARC, PowerPC, MIPS, and ARM architectures. In addition, for the x86_64 and AArch64 architectures, we also determine whether the compiler is GCC or Clang. We created a dataset of more than 76000 binaries and used it for training. Our experiments showed over 99.95% accuracy in detecting the compiler and between 92% to 98%, depending on the architecture, in detecting the optimization level. Furthermore, we analyzed the change in accuracy when the amount of data was extremely limited. Our study shows that it is possible to accurately detect both compiler flag settings and optimization levels with function-level granularity.},
  keywords = {Optimization;Codes;Convolutional neural networks;Binary codes;Libraries;Computer architecture;Training;Compilers;deep learning;static code analysis;reverse engineering},
  doi      = {10.1109/ACCESS.2021.3132950},
  issn     = {2169-3536},
  month    = {}
}

@inproceedings{Kumari2017,
  author    = {Kumari, Mamta and Hsieh, George and Okonkwo, Christopher A.},
  booktitle = {2017 International Conference on Computational Science and Computational Intelligence (CSCI)},
  title     = {Deep Learning Approach to Malware Multi-class Classification Using Image Processing Techniques},
  year      = {2017},
  volume    = {},
  number    = {},
  pages     = {13-18},
  abstract  = {Malicious software has been growing exponentially during the past years. One of the major challenges for antimalware industry is the vast amounts of data and files which need to be evaluated for potential malicious content. To effectively analyze such large amounts of files, machine learning based malware classification approaches have been developed to classify malware into families based on the same forms of malicious behaviors. This paper presents our design and implementation of a malware classification approach using the Convolutional Neural Networks (CNNs), a prime example of deep learning algorithms. It makes use of CNNs to learn a feature hierarchy for classifying samples of malware binary files, represented as gray-scale images, to their corresponding families. It also uses transfer learning techniques to facilitate model building. Three different models of CNNs were developed and these implemented methods achieved validation accuracy around 97% using the large malware dataset provided for the Microsoft Malware Classification Challenge (BIG 2015).},
  keywords  = {Deep Learning;Convolutional Neural Networks;Transfer Learning;Malware Classification},
  doi       = {10.1109/CSCI.2017.3},
  issn      = {},
  month     = {Dec}
}

@inproceedings{Prima2021,
  author    = {Bouchaib, Prima and Bouhorma, Mohammed},
  title     = {TRANSFER LEARNING AND SMOTE ALGORITHM FOR IMAGE-BASED MALWARE CLASSIFICATION},
  year      = {2021},
  isbn      = {9781450388719},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/3454127.3457631},
  doi       = {10.1145/3454127.3457631},
  abstract  = {In recent years, the volume and type of malware is growing, which increases the need of improving a detection and classification malware systems. Nowadays, deep convolutional neural networks (CNNs) have recently proven to be very successful for malware classification due to their performance on images classification. However, their effectiveness is degraded with the unbalanced malware families. In this paper, we propose a malware classification framework using CNN-based deep learning architecture, including a SMOTE technique "Synthetic Minority Oversampling Technique" to balance the dataset (malwares families).Our proposed method consists to converting the binary files into gray scale images and balancing them by the SMOTE method, and then we use them to train the CNN architecture to detect and identify malware families. We use the Transfer Learning technique based on an existing Deep Learning model VGG16 that has previously trained with the ImageNet dataset (≥ 10 million).For evaluations, an extensive experiment was conducted using Microsoft Malware dataset. The Results show that our approach is efficient with an average accuracy of 98\%.},
  booktitle = {Proceedings of the 4th International Conference on Networking, Information Systems \& Security},
  articleno = {56},
  numpages  = {6},
  location  = {KENITRA, AA, Morocco},
  series    = {NISS '21}
}

@article{Hammad2022,
  author         = {Hammad, Baraa Tareq and Jamil, Norziana and Ahmed, Ismail Taha and Zain, Zuhaira Muhammad and Basheer, Shakila},
  title          = {Robust Malware Family Classification Using Effective Features and Classifiers},
  journal        = {Applied Sciences},
  volume         = {12},
  year           = {2022},
  number         = {15},
  article-number = {7877},
  url            = {https://www.mdpi.com/2076-3417/12/15/7877},
  issn           = {2076-3417},
  abstract       = {Malware development has significantly increased recently, posing a serious security risk to both consumers and businesses. Malware developers continually find new ways to circumvent security research’s ongoing efforts to guard against malware attacks. Malware Classification (MC) entails labeling a class of malware to a specific sample, while malware detection merely entails finding malware without identifying which kind of malware it is. There are two main reasons why the most popular MC techniques have a low classification rate. First, Finding and developing accurate features requires highly specialized domain expertise. Second, a data imbalance that makes it challenging to classify and correctly identify malware. Furthermore, the proposed malware classification (MC) method consists of the following five steps: (i) Dataset preparation: 2D malware images are created from the malware binary files; (ii) Visualized Malware Pre-processing: the visual malware images need to be scaled to fit the CNN model’s input size; (iii) Feature extraction: both hand-engineering (Tamura) and deep learning (GoogLeNet) techniques are used to extract the features in this step; (iv) Classification: to perform malware classification, we employed k-Nearest Neighbor (KNN), Support Vector Machines (SVM), and Extreme Learning Machine (ELM). The proposed method is tested on a standard Malimg unbalanced dataset. The accuracy rate of the proposed method was extremely high, making it the most efficient option available. The proposed method’s accuracy rate was outperformed both the Hand-crafted feature and Deep Feature techniques, at 95.42 and 96.84 percent.},
  doi            = {10.3390/app12157877}
}

@article{Al-Masri2024,
  author         = {Al-Masri, Bassam and Bakir, Nader and El-Zaart, Ali and Samrouth, Khouloud},
  title          = {Dual Convolutional Malware Network (DCMN): An Image-Based Malware Classification Using Dual Convolutional Neural Networks},
  journal        = {Electronics},
  volume         = {13},
  year           = {2024},
  number         = {18},
  article-number = {3607},
  url            = {https://www.mdpi.com/2079-9292/13/18/3607},
  issn           = {2079-9292},
  abstract       = {Malware attacks have a cascading effect, causing financial harm, compromising privacy, operations and interrupting. By preventing these attacks, individuals and organizations can safeguard the valuable assets of their operations, and gain more trust. In this paper, we propose a dual convolutional neural network (DCNN) based architecture for malware classification. It consists first of converting malware binary files into 2D grayscale images and then training a customized dual CNN for malware multi-classification. This paper proposes an efficient approach for malware classification using dual CNNs. The model leverages the complementary strengths of a custom structure extraction branch and a pre-trained ResNet-50 model for malware image classification. By combining features extracted from both branches, the model achieved superior performance compared to a single-branch approach.},
  doi            = {10.3390/electronics13183607}
}

@inproceedings{Yang2018,
  author    = {Yang, Chun and Wen, Yu and Guo, Jianbin and Song, Haitao and Li, Linfeng and Che, Haoyang and Meng, Dan},
  title     = {A Convolutional Neural Network based Classifier for Uncompressed Malware Samples},
  year      = {2018},
  isbn      = {9781450359917},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/3267494.3267496},
  doi       = {10.1145/3267494.3267496},
  abstract  = {This paper proposes a deep learning based method for efficient malware classification. Specially, we convert the malware classification problem into the image classification problem, which can be addressed through leveraging convolutional neural networks (CNNs). For many malware families, the images belonging to the same family have similar contours and textures, so we convert the Binary files of malware samples to uncompressed gray-scale images which possess complete information of the original malware without artificial feature extraction. We then design classifier based on Tensorflow framework of Google by combining the deep learning (DL) and malware detection technology. Experimental results show that the uncompressed gray-scale images of the malware are relatively easy to distinguish and the CNN based classifier can achieve a high success rate of 98.2\%},
  booktitle = {Proceedings of the 1st Workshop on Security-Oriented Designs of Computer Architectures and Processors},
  pages     = {15-17},
  numpages  = {3},
  keywords  = {convolutional neural networks (cnns), deep learning (dl), malware classification, tensorflow framework, uncompressed gray-scale images},
  location  = {Toronto, Canada},
  series    = {SecArch'18}
}

@article{El-Shafai2021,
  author         = {El-Shafai, Walid and Almomani, Iman and AlKhayer, Aala},
  title          = {Visualized Malware Multi-Classification Framework Using Fine-Tuned CNN-Based Transfer Learning Models},
  journal        = {Applied Sciences},
  volume         = {11},
  year           = {2021},
  number         = {14},
  article-number = {6446},
  url            = {https://www.mdpi.com/2076-3417/11/14/6446},
  issn           = {2076-3417},
  abstract       = {There is a massive growth in malicious software (Malware) development, which causes substantial security threats to individuals and organizations. Cybersecurity researchers makes continuous efforts to defend against these malware risks. This research aims to exploit the significant advantages of Transfer Learning (TL) and Fine-Tuning (FT) methods to introduce efficient malware detection in the context of imbalanced families without the need to apply complex features extraction or data augmentation processes. Therefore, this paper proposes a visualized malware multi-classification framework to avoid false positives and imbalanced datasets’ challenges through using the fine-tuned convolutional neural network (CNN)-based TL models. The proposed framework comprises eight different FT CNN models including VGG16, AlexNet, DarkNet-53, DenseNet-201, Inception-V3, Places365-GoogleNet, ResNet-50, and MobileNet-V2. First, the binary files of different malware families were transformed into 2D images and then forwarded to the FT CNN models to detect and classify the malware families. The detection and classification performance was examined on a benchmark Malimg imbalanced dataset using different, comprehensive evaluation metrics. The evaluation results prove the FT CNN models’ significance in detecting malware types with high accuracy that reached 99.97% which also outperforms the performance of related machine learning (ML) and deep learning (DL)-based malware multi-classification approaches tested on the same malware dataset.},
  doi            = {10.3390/app11146446}
}

@inproceedings{Alvee2021,
  author    = {Alvee, Syed R. B. and Ahn, Bohyun and Kim, Taesic and Su, Ying and Youn, Young–Woo and Ryu, Myung–Hyo},
  booktitle = {2021 6th IEEE Workshop on the Electronic Grid (eGRID)},
  title     = {Ransomware Attack Modeling and Artificial Intelligence-Based Ransomware Detection for Digital Substations},
  year      = {2021},
  volume    = {},
  number    = {},
  pages     = {01-05},
  abstract  = {Ransomware has become a serious threat to the current computing world, requiring immediate attention to prevent it. Ransomware attacks can also have disruptive impacts on operation of smart grids including digital substations. This paper provides a ransomware attack modeling method targeting disruptive operation of a digital substation and investigates an artificial intelligence (AI)-based ransomware detection approach. The proposed ransomware file detection model is designed by a convolutional neural network (CNN) using 2-D grayscale image files converted from binary files. The experimental results show that the proposed method achieves 96.22% of ransomware detection accuracy.},
  keywords  = {Substations;Conferences;Computational modeling;Gray-scale;Real-time systems;Smart grids;Ransomware;artificial intelligence;attack modeling;convolutional neural network;cybersecurity;digital substation;ransomware},
  doi       = {10.1109/eGRID52793.2021.9662158},
  issn      = {},
  month     = {Nov}
}

@inproceedings{Liang2021,
  author    = {Liang, Junmiao and Ning, Zhenhu and Zhou, Yihua and Cao, Dongzhi},
  booktitle = {2021 6th International Conference on Computational Intelligence and Applications (ICCIA)},
  title     = {Fine-grained Classification of Malicious Code Based on CNN and Multi-resolution Feature Fusion},
  year      = {2021},
  volume    = {},
  number    = {},
  pages     = {123-127},
  abstract  = {With the development of the Internet, security issues in the network have attracted more and more attention. Variants of malicious code are constantly increasing, and their attacks will have a serious impact on the network environment, so effective detection of malicious code has important research significance. However, the current malicious code detection methods still have some problems, such as code detection, cumbersome feature extraction, and misclassification between similar families. To this end, the paper proposes a fine-grained detection method for malicious code. First visualized the binary files of malicious code and converted them into grayscale images. Then, use the improved convolutional neural network to extract the multi-resolution features of grayscale images, and use the interactive fusion method to fuse these features. Finally, input the fused features into the fully connected layer to complete the fine-grained classification of malicious code. Experiments prove that our method is indeed effective for fine-grained classification of malicious code.},
  keywords  = {Visualization;Codes;Fuses;Internet security;Gray-scale;Feature extraction;Malware;malicious code;convolutional neural network;feature fusion;fine-grained classification},
  doi       = {10.1109/ICCIA52886.2021.00031},
  issn      = {},
  month     = {June}
}

@article{Son2022,
  title    = {An enhancement for image-based malware classification using machine learning with low dimension normalized input images},
  journal  = {Journal of Information Security and Applications},
  volume   = {69},
  pages    = {103308},
  year     = {2022},
  issn     = {2214-2126},
  doi      = {https://doi.org/10.1016/j.jisa.2022.103308},
  url      = {https://www.sciencedirect.com/science/article/pii/S2214212622001594},
  author   = {Tran The Son and Chando Lee and Hoa Le-Minh and Nauman Aslam and Vuong Cong Dat},
  keywords = {Image-based Malware Classification, -NN, SVM, CNN, GIST descriptor},
  abstract = {This paper proposes a simple and effective model applied for image-based malware classification using machine learning in which malware images (converted from malware binary files) are directly fed into the classifiers, i.e. k nearest neighbour (k-NN), support vector machine (SVM) and convolution neural networks (CNN). The proposed model does not use the normalized fixed-size square images (e.g. 64 × 64 pixels) or features extracted by image descriptor (e.g. GIST) for training classifiers as existing models do in the literature. Instead, the input images are normalized and horizontally sized down (the width of the image) to a lower dimension of 32 × 64, 16 × 64 or even 8 × 64 than square ones (e.g. 64 × 64 pixels) to reduce the complexity and training time of the model. It is based on the fact that the texture of the malware image is mainly vertically distributed as analysed in this paper. This finding is significant for training those devices which have limited computational resources such as IoT devices. The experiment was conducted on the Malimg, Malheur datasets which contains 9339 (25 malware families) and 3133 variant samples (24 malware families) using k-NN, SVM and CNN classifiers. The achieved results show that it is possible to reduce the dimension of the input images (i.e. 32 × 64, 16 × 64 or even 8 × 64) while still retaining the accuracy of classification as the same as the accuracy obtained by classifier feeding by the fixed-size square image (i.e. 64 × 64 pixels). As a result, training time of the propose model reduces by a half, a quarter, and one-eighth compared to training time taken by the same machine learning-based classifier (i.e. k-NN, SVM and CNN) feeding by fixed-sized square images, i.e. 64 × 64, respectively.}
}

@inproceedings{Alam2024,
  author    = {Alam, Inzamamul and Samiullah, Md and Kabir, Upama and Woo, Simon and Leung, Carson K. and Nguyen, Hoang Hai},
  booktitle = {2024 18th International Conference on Ubiquitous Information Management and Communication (IMCOM)},
  title     = {SREMIC: Spatial Relation Extraction-based Malware Image Classification},
  year      = {2024},
  volume    = {},
  number    = {},
  pages     = {1-8},
  abstract  = {Around 800,000 people fall prey to cyberattacks annually, most often by “malware”. Malware has the potential to become a destructive weapon in Cyber-world. It is a difficult task to manually thwart an assault by malware. It is crucial to properly categorize malware binaries in order to identify their origins. Furthermore, malware structure discovery through basic feature extraction approaches are time-consuming and challenging. Malware classification was previously solved using naive machine learning approaches like support vector machine (SVM) and extreme gradient boosting (XGBoost). Recently, deep learning (DL) has shown to be impactful in finding malicious patterns. Without DL, analysis of the vast amounts of available data tends to impossible. Existing methods (e.g., transfer learning, fusion methodology, ensemble learning) may not be effective on actual malware binary files. Moreover, some single image-based malware classification used rudimentary convolutional neural network (CNN) that does not perform well. Faced with these challenges, we propose in this paper a novel model with of a spatial CNN with sufficient regularization and data augmentation that can identify and classify malware in images effectively and efficiently. Our model is evaluated using datasets like MalImg and Microfsoft-Big. The proposed model achieves validation score of 99.93% for MalImg and 99.72% for Microsoft-Big datasets. Our approach outperforms VGG16, VGG19, ResNet50, EfficientNetB1, and Google's Inception v3, including state-of-the-art (SOTA) techniques.},
  keywords  = {Support vector machines;Deep learning;Feature extraction;Malware;Convolutional neural networks;Data mining;Task analysis;Malware classification;Deep learning;Convolutional neural network (CNN);Spatial relation},
  doi       = {10.1109/IMCOM60618.2024.10418339},
  issn      = {},
  month     = {Jan}
}

@inproceedings{Sartoli2020,
  author    = {Sartoli, Sara and Wei, Yong and Hampton, Shane},
  booktitle = {2020 19th IEEE International Conference on Machine Learning and Applications (ICMLA)},
  title     = {Malware Classification using Recurrence Plots and Deep Neural Network},
  year      = {2020},
  volume    = {},
  number    = {},
  pages     = {901-906},
  abstract  = {In this paper, we introduce a method for visualizing and classifying malware binaries. A malware binary consists of a series of data points of compiled machine codes that represent programming components. The occurrence and recurrence behavior of these components is determined by the common tasks malware samples in a particular family carry out. Thus, we view a malware binary as a series of emissions generated by an underlying stochastic process and use recurrence plots to transform malware binaries into two-dimensional texture images. We observe that recurrence plot-based malware images have significant visual similarities within the same family and are different from samples in other families. We apply deep CNN classifiers to classify malware samples. The proposed approach does not require creating malware signature or manual feature engineering. Our preliminary experimental results show that the proposed malware representation leads to a higher and more stable accuracy in comparison to directly transforming malware binaries to gray-scale images.},
  keywords  = {Visualization;Transfer learning;Transforms;Programming;Malware;Convolutional neural networks;Task analysis;Malware Classification;Deep Learning;Recurrence Plots;Visualization;Static Analysis},
  doi       = {10.1109/ICMLA51294.2020.00147},
  issn      = {},
  month     = {Dec}
}

@article{Lachtar2023,
  author     = {Lachtar, Nada and Ibdah, Duha and Khan, Hamza and Bacha, Anys},
  title      = {RansomShield: A Visualization Approach to Defending Mobile Systems Against Ransomware},
  year       = {2023},
  issue_date = {August 2023},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {26},
  number     = {3},
  issn       = {2471-2566},
  url        = {https://doi.org/10.1145/3579822},
  doi        = {10.1145/3579822},
  abstract   = {The unprecedented growth in mobile systems has transformed the way we approach everyday computing. Unfortunately, the emergence of a sophisticated type of malware known as ransomware poses a great threat to consumers of this technology. Traditional research on mobile malware detection has focused on approaches that rely on analyzing bytecode for uncovering malicious apps. However, cybercriminals can bypass such methods by embedding malware directly in native machine code, making traditional methods inadequate. Another challenge that detection solutions face is scalability. The sheer number of malware variants released every year makes it difficult for solutions to efficiently scale their coverage. To address these concerns, this work presents RansomShield, an energy-efficient solution that leverages CNNs to detect ransomware. We evaluate CNN architectures that have been known to perform well on computer vision tasks and examine their suitability for ransomware detection. We show that systematically converting native instructions from Android apps into images using space-filling curve visualization techniques enable CNNs to reliably detect ransomware with high accuracy. We characterize the robustness of this approach across ARM and x86 architectures and demonstrate the effectiveness of this solution across heterogeneous platforms including smartphones and chromebooks. We evaluate the suitability of different models for mobile systems by comparing their energy demands using different platforms. In addition, we present a CNN introspection framework that determines the important features that are needed for ransomware detection. Finally, we evaluate the robustness of this solution against adversarial machine learning (AML) attacks using state-of-the-art Android malware dataset.},
  journal    = {ACM Trans. Priv. Secur.},
  month      = mar,
  articleno  = {27},
  numpages   = {30},
  keywords   = {Ransomware, malware, machine learning, convolutional neural networks, visualization, Hilbert, entropy, mobile security, Android, intrusion detection system, instruction set architecture, energy efficiency}
}
@INPROCEEDINGS{Khan2020,
  author={Khan, Mamoona and Baig, Duaa and Khan, Usman Shahid and Karim, Ahmad},
  booktitle={2020 International Conference on Cyber Warfare and Security (ICCWS)}, 
  title={Malware Classification Framework using Convolutional Neural Network}, 
  year={2020},
  volume={},
  number={},
  pages={1-7},
  abstract={Cyber-security is facing a huge threat from malware and malware mass production due to its mutation factors. Classification of malware by their features is necessary for the security of information technology (IT) society. To provide security from malware, deep neural networks (DNN) can offer a superior solution for the detection and categorization of malware samples by using image classification techniques. To strengthen our ideology of malware classification through image recognition, we have experimented by comparing two perspectives of malware classification. The first perspective implements dense neural networks on binary files and the other applies deep layered convolutional neural network on malware images. The proposed model is trained to a set of malware samples, which are further distributed into 9 different families. The dataset of malware samples which is used in this paper is provided by Microsoft for Microsoft Malware Classification Challenge in 2015. The proposed model shows an accuracy of 97.80% on the provided dataset. By using the proposed model optimum classifications results can be attained.},
  keywords={Malware;Neural networks;Feature extraction;Deep learning;Hidden Markov models;Biological neural networks;Data models;Malware;deep learning;dense neural network;convolutional neural network},
  doi={10.1109/ICCWS48432.2020.9292384},
  ISSN={},
  month={Oct},}

@INPROCEEDINGS{Garcia2019,
  author={García-Daza-Cervantes, Ixcanil and Reyes-Reyes, Rogelio and Cruz-Ramos, Clara and Ponomaryov, Volodymyr and Ponomaryov, Denys},
  booktitle={2019 IEEE International Scientific-Practical Conference Problems of Infocommunications, Science and Technology (PIC S&T)}, 
  title={Malware Classification Using Distance and Directional Local Binary Patterns}, 
  year={2019},
  volume={},
  number={},
  pages={397-401},
  abstract={Nowadays, malware is one of the biggest cyber threats faced by a common user to a large company, since almost any electronic device is susceptible to an infection due to this type of threat. In addition, malwares continue growing in frequency and sophistication where the identification and classification of the classic and new variants of different malware families is a difficult task that requires modern detection techniques. In this paper, a malware classification method based on two novel local binary pattern descriptors and convolutional neural network, which represents malware binary files as gray-scale images, is presented. The proposed method exploits the fact that most malware variants in the same family have similar local and global structures, therefore, the computing of the local binary descriptors of the gray-scale images facilitates the detection and classification of the variants of a malware. Experimental results have shown that the proposed method outperforms previous related schemes in terms of accuracy resulting in of about 98 %.},
  keywords={Malware;Gray-scale;Feature extraction;Convolutional neural networks;Automata;Entropy;Malware classification;Convolutional Neural Network;Local binary patterns;Texture Analysis;visualization},
  doi={10.1109/PICST47496.2019.9061336},
  ISSN={},
  month={Oct},}

@article{Parihar2022,
	abstract = {Malware classification continues to be exceedingly difficult due to the exponential growth in the number and variants of malicious files. It is crucial to classify malicious files based on their intent, activity, and threat to have a robust malware protection and post-attack recovery system in place. This paper proposes a novel deep learning-based model, S-DCNN, to classify malware binary files into their respective malware families efficiently. S-DCNN uses the image-based representation of the malware binaries and leverages the concepts of transfer learning and ensemble learning. The model incorporates three deep convolutional neural networks, namely ResNet50, Xception, and EfficientNet-B4. The ensemble technique is used to combine these component models'predictions and a multilayered perceptron is used as a meta classifier. The ensemble technique fuses the diverse knowledge of the component models, resulting in high generalizability and low variance of the S-DCNN. Further, it eliminates the use of feature engineering, reverse engineering, disassembly, and other domain-specific techniques earlier used for malware classification. To establish S-DCNN's robustness and generalizability, the performance of proposed model is evaluated on the Malimg dataset, a dataset collected from VirusShare, and packed malware dataset counterparts of both Malimg and VirusShare datasets. The proposed method achieves a state-of-the-art 10-fold accuracy of 99.43{\%} on the Malimg dataset and an accuracy of 99.65{\%} on the VirusShare dataset.},
	author = {Parihar, Anil Singh and Kumar, Shashank and Khosla, Savya},
	date = {2022/09/01},
	date-added = {2024-10-29 16:44:56 +0100},
	date-modified = {2024-10-29 16:44:56 +0100},
	doi = {10.1007/s11042-022-12615-7},
	id = {Parihar2022},
	isbn = {1573-7721},
	journal = {Multimedia Tools and Applications},
	number = {21},
	pages = {30997--31015},
	title = {S-DCNN: stacked deep convolutional neural networks for malware classification},
	url = {https://doi.org/10.1007/s11042-022-12615-7},
	volume = {81},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1007/s11042-022-12615-7}}
