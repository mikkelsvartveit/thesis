@inproceedings{Kumari2017,
  author    = {Kumari, Mamta and Hsieh, George and Okonkwo, Christopher A.},
  booktitle = {2017 International Conference on Computational Science and Computational Intelligence (CSCI)},
  title     = {Deep Learning Approach to Malware Multi-class Classification Using Image Processing Techniques},
  year      = {2017},
  volume    = {},
  number    = {},
  pages     = {13-18},
  abstract  = {Malicious software has been growing exponentially during the past years. One of the major challenges for antimalware industry is the vast amounts of data and files which need to be evaluated for potential malicious content. To effectively analyze such large amounts of files, machine learning based malware classification approaches have been developed to classify malware into families based on the same forms of malicious behaviors. This paper presents our design and implementation of a malware classification approach using the Convolutional Neural Networks (CNNs), a prime example of deep learning algorithms. It makes use of CNNs to learn a feature hierarchy for classifying samples of malware binary files, represented as gray-scale images, to their corresponding families. It also uses transfer learning techniques to facilitate model building. Three different models of CNNs were developed and these implemented methods achieved validation accuracy around 97% using the large malware dataset provided for the Microsoft Malware Classification Challenge (BIG 2015).},
  keywords  = {Deep Learning;Convolutional Neural Networks;Transfer Learning;Malware Classification},
  doi       = {10.1109/CSCI.2017.3},
  issn      = {},
  month     = {Dec}
}

@inproceedings{Prima2021,
  author    = {Prima, Bouchaib and Bouhorma, Mohammed},
  title     = {TRANSFER LEARNING AND SMOTE ALGORITHM FOR IMAGE-BASED MALWARE CLASSIFICATION},
  year      = {2021},
  isbn      = {9781450388719},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/3454127.3457631},
  doi       = {10.1145/3454127.3457631},
  abstract  = {In recent years, the volume and type of malware is growing, which increases the need of improving a detection and classification malware systems. Nowadays, deep convolutional neural networks (CNNs) have recently proven to be very successful for malware classification due to their performance on images classification. However, their effectiveness is degraded with the unbalanced malware families. In this paper, we propose a malware classification framework using CNN-based deep learning architecture, including a SMOTE technique "Synthetic Minority Oversampling Technique" to balance the dataset (malwares families).Our proposed method consists to converting the binary files into gray scale images and balancing them by the SMOTE method, and then we use them to train the CNN architecture to detect and identify malware families. We use the Transfer Learning technique based on an existing Deep Learning model VGG16 that has previously trained with the ImageNet dataset (≥ 10 million).For evaluations, an extensive experiment was conducted using Microsoft Malware dataset. The Results show that our approach is efficient with an average accuracy of 98\%.},
  booktitle = {Proceedings of the 4th International Conference on Networking, Information Systems \& Security},
  articleno = {56},
  numpages  = {6},
  location  = {KENITRA, AA, Morocco},
  series    = {NISS '21}
}

@article{Hammad2022,
  author         = {Hammad, Baraa Tareq and Jamil, Norziana and Ahmed, Ismail Taha and Zain, Zuhaira Muhammad and Basheer, Shakila},
  title          = {Robust Malware Family Classification Using Effective Features and Classifiers},
  journal        = {Applied Sciences},
  volume         = {12},
  year           = {2022},
  number         = {15},
  article-number = {7877},
  url            = {https://www.mdpi.com/2076-3417/12/15/7877},
  issn           = {2076-3417},
  abstract       = {Malware development has significantly increased recently, posing a serious security risk to both consumers and businesses. Malware developers continually find new ways to circumvent security research’s ongoing efforts to guard against malware attacks. Malware Classification (MC) entails labeling a class of malware to a specific sample, while malware detection merely entails finding malware without identifying which kind of malware it is. There are two main reasons why the most popular MC techniques have a low classification rate. First, Finding and developing accurate features requires highly specialized domain expertise. Second, a data imbalance that makes it challenging to classify and correctly identify malware. Furthermore, the proposed malware classification (MC) method consists of the following five steps: (i) Dataset preparation: 2D malware images are created from the malware binary files; (ii) Visualized Malware Pre-processing: the visual malware images need to be scaled to fit the CNN model’s input size; (iii) Feature extraction: both hand-engineering (Tamura) and deep learning (GoogLeNet) techniques are used to extract the features in this step; (iv) Classification: to perform malware classification, we employed k-Nearest Neighbor (KNN), Support Vector Machines (SVM), and Extreme Learning Machine (ELM). The proposed method is tested on a standard Malimg unbalanced dataset. The accuracy rate of the proposed method was extremely high, making it the most efficient option available. The proposed method’s accuracy rate was outperformed both the Hand-crafted feature and Deep Feature techniques, at 95.42 and 96.84 percent.},
  doi            = {10.3390/app12157877}
}

@article{Al-Masri2024,
  author         = {Al-Masri, Bassam and Bakir, Nader and El-Zaart, Ali and Samrouth, Khouloud},
  title          = {Dual Convolutional Malware Network (DCMN): An Image-Based Malware Classification Using Dual Convolutional Neural Networks},
  journal        = {Electronics},
  volume         = {13},
  year           = {2024},
  number         = {18},
  article-number = {3607},
  url            = {https://www.mdpi.com/2079-9292/13/18/3607},
  issn           = {2079-9292},
  abstract       = {Malware attacks have a cascading effect, causing financial harm, compromising privacy, operations and interrupting. By preventing these attacks, individuals and organizations can safeguard the valuable assets of their operations, and gain more trust. In this paper, we propose a dual convolutional neural network (DCNN) based architecture for malware classification. It consists first of converting malware binary files into 2D grayscale images and then training a customized dual CNN for malware multi-classification. This paper proposes an efficient approach for malware classification using dual CNNs. The model leverages the complementary strengths of a custom structure extraction branch and a pre-trained ResNet-50 model for malware image classification. By combining features extracted from both branches, the model achieved superior performance compared to a single-branch approach.},
  doi            = {10.3390/electronics13183607}
}

@article{El-Shafai2021,
  author         = {El-Shafai, Walid and Almomani, Iman and AlKhayer, Aala},
  title          = {Visualized Malware Multi-Classification Framework Using Fine-Tuned CNN-Based Transfer Learning Models},
  journal        = {Applied Sciences},
  volume         = {11},
  year           = {2021},
  number         = {14},
  article-number = {6446},
  url            = {https://www.mdpi.com/2076-3417/11/14/6446},
  issn           = {2076-3417},
  abstract       = {There is a massive growth in malicious software (Malware) development, which causes substantial security threats to individuals and organizations. Cybersecurity researchers makes continuous efforts to defend against these malware risks. This research aims to exploit the significant advantages of Transfer Learning (TL) and Fine-Tuning (FT) methods to introduce efficient malware detection in the context of imbalanced families without the need to apply complex features extraction or data augmentation processes. Therefore, this paper proposes a visualized malware multi-classification framework to avoid false positives and imbalanced datasets’ challenges through using the fine-tuned convolutional neural network (CNN)-based TL models. The proposed framework comprises eight different FT CNN models including VGG16, AlexNet, DarkNet-53, DenseNet-201, Inception-V3, Places365-GoogleNet, ResNet-50, and MobileNet-V2. First, the binary files of different malware families were transformed into 2D images and then forwarded to the FT CNN models to detect and classify the malware families. The detection and classification performance was examined on a benchmark Malimg imbalanced dataset using different, comprehensive evaluation metrics. The evaluation results prove the FT CNN models’ significance in detecting malware types with high accuracy that reached 99.97% which also outperforms the performance of related machine learning (ML) and deep learning (DL)-based malware multi-classification approaches tested on the same malware dataset.},
  doi            = {10.3390/app11146446}
}

@inproceedings{Alvee2021,
  author    = {Alvee, Syed R. B. and Ahn, Bohyun and Kim, Taesic and Su, Ying and Youn, Young–Woo and Ryu, Myung–Hyo},
  booktitle = {2021 6th IEEE Workshop on the Electronic Grid (eGRID)},
  title     = {Ransomware Attack Modeling and Artificial Intelligence-Based Ransomware Detection for Digital Substations},
  year      = {2021},
  volume    = {},
  number    = {},
  pages     = {01-05},
  abstract  = {Ransomware has become a serious threat to the current computing world, requiring immediate attention to prevent it. Ransomware attacks can also have disruptive impacts on operation of smart grids including digital substations. This paper provides a ransomware attack modeling method targeting disruptive operation of a digital substation and investigates an artificial intelligence (AI)-based ransomware detection approach. The proposed ransomware file detection model is designed by a convolutional neural network (CNN) using 2-D grayscale image files converted from binary files. The experimental results show that the proposed method achieves 96.22% of ransomware detection accuracy.},
  keywords  = {Substations;Conferences;Computational modeling;Gray-scale;Real-time systems;Smart grids;Ransomware;artificial intelligence;attack modeling;convolutional neural network;cybersecurity;digital substation;ransomware},
  doi       = {10.1109/eGRID52793.2021.9662158},
  issn      = {},
  month     = {Nov}
}

@inproceedings{Liang2021,
  author    = {Liang, Junmiao and Ning, Zhenhu and Zhou, Yihua and Cao, Dongzhi},
  booktitle = {2021 6th International Conference on Computational Intelligence and Applications (ICCIA)},
  title     = {Fine-grained Classification of Malicious Code Based on CNN and Multi-resolution Feature Fusion},
  year      = {2021},
  volume    = {},
  number    = {},
  pages     = {123-127},
  abstract  = {With the development of the Internet, security issues in the network have attracted more and more attention. Variants of malicious code are constantly increasing, and their attacks will have a serious impact on the network environment, so effective detection of malicious code has important research significance. However, the current malicious code detection methods still have some problems, such as code detection, cumbersome feature extraction, and misclassification between similar families. To this end, the paper proposes a fine-grained detection method for malicious code. First visualized the binary files of malicious code and converted them into grayscale images. Then, use the improved convolutional neural network to extract the multi-resolution features of grayscale images, and use the interactive fusion method to fuse these features. Finally, input the fused features into the fully connected layer to complete the fine-grained classification of malicious code. Experiments prove that our method is indeed effective for fine-grained classification of malicious code.},
  keywords  = {Visualization;Codes;Fuses;Internet security;Gray-scale;Feature extraction;Malware;malicious code;convolutional neural network;feature fusion;fine-grained classification},
  doi       = {10.1109/ICCIA52886.2021.00031},
  issn      = {},
  month     = {June}
}

@article{Son2022,
  title    = {An enhancement for image-based malware classification using machine learning with low dimension normalized input images},
  journal  = {Journal of Information Security and Applications},
  volume   = {69},
  pages    = {103308},
  year     = {2022},
  issn     = {2214-2126},
  doi      = {https://doi.org/10.1016/j.jisa.2022.103308},
  url      = {https://www.sciencedirect.com/science/article/pii/S2214212622001594},
  author   = {Tran The Son and Chando Lee and Hoa Le-Minh and Nauman Aslam and Vuong Cong Dat},
  keywords = {Image-based Malware Classification, -NN, SVM, CNN, GIST descriptor},
  abstract = {This paper proposes a simple and effective model applied for image-based malware classification using machine learning in which malware images (converted from malware binary files) are directly fed into the classifiers, i.e. k nearest neighbour (k-NN), support vector machine (SVM) and convolution neural networks (CNN). The proposed model does not use the normalized fixed-size square images (e.g. 64 × 64 pixels) or features extracted by image descriptor (e.g. GIST) for training classifiers as existing models do in the literature. Instead, the input images are normalized and horizontally sized down (the width of the image) to a lower dimension of 32 × 64, 16 × 64 or even 8 × 64 than square ones (e.g. 64 × 64 pixels) to reduce the complexity and training time of the model. It is based on the fact that the texture of the malware image is mainly vertically distributed as analysed in this paper. This finding is significant for training those devices which have limited computational resources such as IoT devices. The experiment was conducted on the Malimg, Malheur datasets which contains 9339 (25 malware families) and 3133 variant samples (24 malware families) using k-NN, SVM and CNN classifiers. The achieved results show that it is possible to reduce the dimension of the input images (i.e. 32 × 64, 16 × 64 or even 8 × 64) while still retaining the accuracy of classification as the same as the accuracy obtained by classifier feeding by the fixed-size square image (i.e. 64 × 64 pixels). As a result, training time of the propose model reduces by a half, a quarter, and one-eighth compared to training time taken by the same machine learning-based classifier (i.e. k-NN, SVM and CNN) feeding by fixed-sized square images, i.e. 64 × 64, respectively.}
}

@inproceedings{Yang2019,
  author    = {Yang, Shouguo and Shi, Zhiqiang and Zhang, Guodong and Li, Mingxuan and Ma, Yuan and Sun, Limin},
  booktitle = {ICC 2019 - 2019 IEEE International Conference on Communications (ICC)},
  title     = {Understand Code Style: Efficient CNN-Based Compiler Optimization Recognition System},
  year      = {2019},
  volume    = {},
  number    = {},
  pages     = {1-6},
  abstract  = {Compiler optimization level recognition can be applied to vulnerability discovery and binary analysis. Due to the exists of many different compilation optimization options, the difference in the contents of the binary file is very complicated. There are thousands of compiler optimization algorithms and multiple different processor architectures, so it is very difficult to manually analyze binary files and recognize its compiler optimization level with rules. This paper first proposes a CNN-based compiler optimization level recognition model: BinEye. The system extracts semantic and structural differences and automatically recognize the compiler optimization levels. The model is designed to be very suitable for binary file processing and is easy to understand. We built a dataset containing 80028 binary files for the model training and testing. Our proposed model achieves an accuracy of over 97%. At the same time, BinEye is a fully CNN-based system and it has a faster forward calculation speed, at least 8 times faster than the normal RNN-based model. Through our analysis of the model output, we successfully found the difference in assembly codes caused by the different compiler optimization level. This means that the model we proposed is interpretable. Based on our model, we propose a method to analyze the code differences caused by different compiler optimization levels, which has great guiding significance for analyzing closed source compilers and binary security analysis.},
  keywords  = {Optimization;Security;Convolution;Analytical models;Task analysis;Software;Semantics},
  doi       = {10.1109/ICC.2019.8761073},
  issn      = {1938-1883},
  month     = {May}
}

@article{Pizzolotto2021,
  author   = {Pizzolotto, Davide and Inoue, Katsuro},
  journal  = {IEEE Access},
  title    = {Identifying Compiler and Optimization Level in Binary Code From Multiple Architectures},
  year     = {2021},
  volume   = {9},
  number   = {},
  pages    = {163461-163475},
  abstract = {While compiling a native application, different compiler flags or optimization levels can be configured. This choice depends on the different requirements. For example, if the application binary is intended for final release, the flags and optimization settings should be set for execution speed and efficiency. Alternatively, if the application is to be used for debugging purposes, debug flags should be configured accordingly, usually involving minor or no code optimization. However, this information cannot be easily extracted from a compiled binary. Nonetheless, ensuring the same compiler and compilation flags is particularly important when comparing different binary files, to avoid inaccurate or unreliable analyses. Unfortunately, to understand which flags and optimizations have been used, a deep knowledge of the target architecture and the compiler used is required. In this study, we present two deep learning models used to detect both compiler and optimization level in a compiled binary. The optimization levels we study are O0, O1, O2, O3, and Os in the x86_64, AArch64, RISC-V, SPARC, PowerPC, MIPS, and ARM architectures. In addition, for the x86_64 and AArch64 architectures, we also determine whether the compiler is GCC or Clang. We created a dataset of more than 76000 binaries and used it for training. Our experiments showed over 99.95% accuracy in detecting the compiler and between 92% to 98%, depending on the architecture, in detecting the optimization level. Furthermore, we analyzed the change in accuracy when the amount of data was extremely limited. Our study shows that it is possible to accurately detect both compiler flag settings and optimization levels with function-level granularity.},
  keywords = {Optimization;Codes;Convolutional neural networks;Binary codes;Libraries;Computer architecture;Training;Compilers;deep learning;static code analysis;reverse engineering},
  doi      = {10.1109/ACCESS.2021.3132950},
  issn     = {2169-3536},
  month    = {}
}

@article{Lecun98,
  author   = {Lecun, Y. and Bottou, L. and Bengio, Y. and Haffner, P.},
  journal  = {Proceedings of the IEEE},
  title    = {Gradient-based learning applied to document recognition},
  year     = {1998},
  volume   = {86},
  number   = {11},
  pages    = {2278-2324},
  abstract = {Multilayer neural networks trained with the back-propagation algorithm constitute the best example of a successful gradient based learning technique. Given an appropriate network architecture, gradient-based learning algorithms can be used to synthesize a complex decision surface that can classify high-dimensional patterns, such as handwritten characters, with minimal preprocessing. This paper reviews various methods applied to handwritten character recognition and compares them on a standard handwritten digit recognition task. Convolutional neural networks, which are specifically designed to deal with the variability of 2D shapes, are shown to outperform all other techniques. Real-life document recognition systems are composed of multiple modules including field extraction, segmentation recognition, and language modeling. A new learning paradigm, called graph transformer networks (GTN), allows such multimodule systems to be trained globally using gradient-based methods so as to minimize an overall performance measure. Two systems for online handwriting recognition are described. Experiments demonstrate the advantage of global training, and the flexibility of graph transformer networks. A graph transformer network for reading a bank cheque is also described. It uses convolutional neural network character recognizers combined with global training techniques to provide record accuracy on business and personal cheques. It is deployed commercially and reads several million cheques per day.},
  keywords = {Neural networks;Pattern recognition;Machine learning;Optical character recognition software;Character recognition;Feature extraction;Multi-layer neural network;Optical computing;Hidden Markov models;Principal component analysis},
  doi      = {10.1109/5.726791},
  issn     = {1558-2256},
  month    = {Nov}
}

@misc{Simonyan2015,
  title         = {Very Deep Convolutional Networks for Large-Scale Image Recognition},
  author        = {Karen Simonyan and Andrew Zisserman},
  year          = {2015},
  eprint        = {1409.1556},
  archiveprefix = {arXiv},
  primaryclass  = {cs.CV},
  url           = {https://arxiv.org/abs/1409.1556}
}